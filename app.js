// Firebase SDK import (v10 modular)
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.13.2/firebase-app.js";
import { 
  getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged 
} from "https://www.gstatic.com/firebasejs/10.13.2/firebase-auth.js";
import { 
  getDatabase, ref, set, get 
} from "https://www.gstatic.com/firebasejs/10.13.2/firebase-database.js";

// üîπ Ïó¨Í∏∞Ïóê ÎÑ§ Firebase ÏÑ§Ï†ï Î∂ôÏó¨ÎÑ£Í∏∞
const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_PROJECT.firebaseapp.com",
  databaseURL: "https://YOUR_PROJECT-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId: "YOUR_PROJECT",
  storageBucket: "YOUR_PROJECT.appspot.com",
  messagingSenderId: "SENDER_ID",
  appId: "APP_ID"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getDatabase(app);

// üîπ UI ÏöîÏÜå
const authSection = document.getElementById("auth-section");
const appSection = document.getElementById("app-section");
const signupBtn = document.getElementById("signup");
const loginBtn = document.getElementById("login");
const logoutBtn = document.getElementById("logout");

// ÌöåÏõêÍ∞ÄÏûÖ
signupBtn.onclick = () => {
  const email = document.getElementById("email").value;
  const password = document.getElementById("password").value;
  createUserWithEmailAndPassword(auth, email, password)
    .then((userCredential) => {
      const user = userCredential.user;
      // DBÏóê Ï¥àÍ∏∞ ÎèÑÏû•Ìåê Ï†ÄÏû•
      set(ref(db, "users/" + user.uid), {
        stamps: {}
      });
    })
    .catch((err) => alert(err.message));
};

// Î°úÍ∑∏Ïù∏
loginBtn.onclick = () => {
  const email = document.getElementById("email").value;
  const password = document.getElementById("password").value;
  signInWithEmailAndPassword(auth, email, password)
    .catch((err) => alert(err.message));
};

// Î°úÍ∑∏ÏïÑÏõÉ
logoutBtn.onclick = () => {
  signOut(auth);
};

// Î°úÍ∑∏Ïù∏ ÏÉÅÌÉú Î≥ÄÌôî Í∞êÏßÄ
onAuthStateChanged(auth, (user) => {
  if (user) {
    authSection.style.display = "none";
    appSection.style.display = "block";
    loadStamps(user.uid);
  } else {
    authSection.style.display = "block";
    appSection.style.display = "none";
  }
});

// Î∂ÄÏä§ Î∞©Î¨∏ ‚Üí ÎèÑÏû• Ï∞çÍ∏∞
window.visitBooth = function(boothName) {
  const user = auth.currentUser;
  if (!user) return;

  // DBÏóê Ìï¥Îãπ Î∂ÄÏä§ ÎèÑÏû• trueÎ°ú Ï†ÄÏû•
  set(ref(db, "users/" + user.uid + "/stamps/" + boothName), true)
    .then(() => loadStamps(user.uid));
};

// ÎèÑÏû•Ìåê Î∂àÎü¨Ïò§Í∏∞
function loadStamps(uid) {
  const board = document.getElementById("stampBoard");
  board.innerHTML = '<img src="background.png" style="width:100%;">'; // Ï¥àÍ∏∞Ìôî

  const stampPositions = {
    "Ïù∏Ìè¨Î©îÌã∞Ïπ¥": {x: 50, y: 100},
    "Static": {x: 200, y: 150},
    "ÏÖàÌÑ∞": {x: 300, y: 250}
  };

  get(ref(db, "users/" + uid + "/stamps")).then(snapshot => {
    if (snapshot.exists()) {
      const stamps = snapshot.val();
      for (const booth in stamps) {
        if (stamps[booth]) {
          const stamp = document.createElement("img");
          stamp.src = "stamp.png";
          stamp.style.position = "absolute";
          stamp.style.left = stampPositions[booth].x + "px";
          stamp.style.top = stampPositions[booth].y + "px";
          stamp.style.width = "50px";
          board.appendChild(stamp);
        }
      }
    }
  });
}
